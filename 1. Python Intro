What is Python?
1.	Python is a popular programming language.
2.	It is used for web development, create workflows, system scripting, machine learning, connect to database systems, read & modify files etc.
3.	Web Development: We can use it to build applications and websites using frameworks like Django, Pyramid.
4.	Data Analysis: We can do data analysis, Data visualization and scientific computing using Pandas, Numpy, Matplotlib libraries.
5.	Machine Learning: Used in Machine Learning and AI application which supports TensorFlow, Keras, PyTorch Libraries.
6.	Automation and Scripting: Used to automate tasks, write scripts, build command-line utilities.



Why Python?
1.	Easy to learn: Python has a relatively simple syntax, which makes it easy for beginners to learn. It's also an interpreted language, which means that you don't need to compile your code before running it.
2.	Versatility: Python can be used for a wide range of tasks, including web development, scientific computing, data analysis, artificial intelligence and machine learning, automation, and more.
3.	Large community: Python has a large and active community of developers, which means that you can find plenty of support, resources, and libraries to help you with your projects.
4.	Open source: Python is an open-source language, which means that it's free to use and you can modify the code to suit your needs.
5.	High-level language: Python is a high-level language, which means that you don't need to worry about low-level details such as memory management or CPU registers. This makes it easier to write code quickly and with fewer errors.
6.	Cross-platform: Python runs on a variety of platforms, including Windows, macOS, and Linux, making it a versatile choice for developers.



Structured Data: Structured data refers to data that is organized in a predefined format, such as tables or spreadsheets, where each data element has a specific meaning and can be easily identified and processed. This type of data is commonly used in databases, where it can be easily searched, sorted, and analyzed. For example, customer information in a structured database might include fields for name, address, phone number, and email address.
1.	A customer database with fields for name, address, phone number, and email address
2.	A spreadsheet of financial data with columns for date, transaction type, amount, and category
3.	An inventory system with fields for product name, SKU, quantity, and price

Unstructured Data: Unstructured data, on the other hand, does not have a predefined format and lacks a clear organization. Examples of unstructured data include text, images, audio, and video files. Unstructured data is often created by humans and is difficult to process and analyze using traditional methods. For example, analyzing the sentiment of customer reviews on social media can be challenging because the data is unstructured and may contain slang or abbreviations.
1.	A social media post with text, images, and hashtags
2.	A video file without any accompanying metadata or transcript
3.	An email with free-form text and no specific structure or formatting

Semi-Structured Data: Semi-structured data is a combination of structured and unstructured data. It has some structure, but not enough to fit neatly into a traditional database or spreadsheet. Semi-structured data often includes metadata or tags that provide some organization, but the content itself may be unstructured. For example, an XML file might have a defined structure for certain elements but allow for free-form text in other areas.
1. 	An XML file with defined tags for certain elements but free-form text for others
2. 	A JSON document with structured data for some fields but unstructured text for others
3.	An email with structured header information (e.g. to, from, subject) but free-form text in the body of the email.
